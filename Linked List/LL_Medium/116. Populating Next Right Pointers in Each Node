                  # 22-01-25
          # O(n) : O(1)
"""
# Definition for a Node.
class Node:
    def __init__(self, val: int = 0, left: 'Node' = None, right: 'Node' = None, next: 'Node' = None):
        self.val = val
        self.left = left
        self.right = right
        self.next = next
"""

class Solution:
    def connect(self, root: 'Optional[Node]') -> 'Optional[Node]':
        if not root:
            return root
        lev_st=root
        while lev_st.left:
            curr = lev_st
            while curr:
                curr.left.next=curr.right
                if curr.next:
                    curr.right.next = curr.next.left
                curr=curr.next
            lev_st=lev_st.left
        return root
