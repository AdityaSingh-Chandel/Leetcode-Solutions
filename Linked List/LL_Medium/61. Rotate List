                            # 29-10-24
"""
APPROACH:
    build Circular LL --> break at required position
"""

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        if not head or not head.next or k == 0:
            return head 
            
        n=1
        tail=head
        while tail.next:
            tail=tail.next
            n+=1
        
        k%=n
        if k==0:
            return head

        tail.next=head              # Circular LL 


        n_tail=head
        for i in range(n-k-1):
            n_tail=n_tail.next
        n_head=n_tail.next          
        n_tail.next=None            # Break CLL 

        return n_head
