                                                # 26-10-24
class Solution:
    def jump(self, nums: List[int]) -> int:
        if len(nums)==1:
            return 0
        if nums[0]==0:
            return 0
        
        j=0
        max_reach=0
        end_jump=0       # end_of_curr_jump
        for i in range(len(nums)-1):
            max_reach=max(max_reach,i+nums[i])
            if i==end_jump:
                j+=1
                end_jump=max_reach
                if end_jump >= len(nums)-1:
                    break
        return j

        """
        i=0
        coun=0
        while i<len(nums):
            if (i + nums[i]) >= (len(nums)-1):
                return coun+1
            else:
                if  max(nums[(i+1):(i+nums[i]+1)]) ==0:
                    return 0
                
                else:
                    i+= max(nums[(i+1):(i+nums[i]+1)])
                    coun+=1
        return coun+1
        """
