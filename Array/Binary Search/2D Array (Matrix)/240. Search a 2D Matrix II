              # 27-01-25
      # Improve it more ...
               # O( m * log(n))
               # O(1)
class Solution:
    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:
        m, n = len(matrix), len(matrix[0])
        if matrix[0][0] > target or matrix[m - 1][n - 1] < target:
            return False

        def binSearch(row, target, n):
            l, h = 0, n
            while l <= h:
                mid = (l + h) // 2
                if row[mid] == target:
                    return True
                elif row[mid] < target:
                    l = mid + 1
                else:
                    h = mid - 1
            return False

        for row in matrix:
            if target < row[0]:
                break
            if binSearch(row, target, n - 1):
                return True
        return False
