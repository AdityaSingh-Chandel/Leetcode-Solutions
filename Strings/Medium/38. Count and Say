                 # 20-01-25
class Solution:
    def countAndSay(self, n: int) -> str:
               # O( n* 2^n)
               # O( 2^n)
        if n==1:
            return "1"
        prev=self.countAndSay(n-1)   # recursion
        res=[]
        count=1
        for i in range(1,len(prev)):
            if prev[i]==prev[i-1]:
                count+=1
            else:
                res.append(str(count))
                res.append(prev[i-1])
                count=1
        res.append(str(count))
        res.append(prev[-1])

        return ''.join(res)

