                     # 05-12-24
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def sumNumbers(self, root: Optional[TreeNode]) -> int:
        def allNums(node,curr,nums):
            if not node:
                return
            curr=curr*10+node.val

            if not node.left and not node.right:
                
                nums.append(curr)   # Here, couldn't do " nums+=curr" , it was giving only 0 but here I'm not even creating a copy

            
            allNums(node.left,curr,nums)
            allNums(node.right, curr,nums)

            # backtrack
            curr=0
        nums=[]
        allNums(root,0,nums)
        #print(nums)
        return sum(nums)
        
        
