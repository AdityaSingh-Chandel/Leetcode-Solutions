                         # 19-11-24
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isValidBST(self, root: Optional[TreeNode]) -> bool:
        def valid(node,minVal,maxVal):
            if not node:
                return True
            
            if not (minVal < node.val < maxVal):
                return False
            
            return valid(node.left,minVal,node.val) and \
            valid(node.right,node.val,maxVal)
        
        return valid(root,float("-inf"),float("inf"))
            


        """   # INCORRECT-isn't working for all the cases
        def isVal(root):
            if not root:
                return
            if root.left:
                if root.left.val > root.val:
                    return False
            if root.right:
                if root.right.val < root.val:
                    return False
            if not isVal(root.left):
                return False
            if not isVal(root.right):
                return False
        if root and ( not root.left and not root.right):
            return True
        return isVal(root)
        """
        
        
